{"name": "libpldm_base_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 23 tests from 7 test suites.\n[----------] Global test environment set-up.\n[----------] 3 tests from PackPLDMMessage\n[ RUN      ] PackPLDMMessage.BadPathTest\n[       OK ] PackPLDMMessage.BadPathTest (0 ms)\n[ RUN      ] PackPLDMMessage.RequestMessageGoodPath\n[       OK ] PackPLDMMessage.RequestMessageGoodPath (0 ms)\n[ RUN      ] PackPLDMMessage.ResponseMessageGoodPath\n[       OK ] PackPLDMMessage.ResponseMessageGoodPath (0 ms)\n[----------] 3 tests from PackPLDMMessage (0 ms total)\n\n[----------] 3 tests from UnpackPLDMMessage\n[ RUN      ] UnpackPLDMMessage.BadPathTest\n[       OK ] UnpackPLDMMessage.BadPathTest (0 ms)\n[ RUN      ] UnpackPLDMMessage.RequestMessageGoodPath\n[       OK ] UnpackPLDMMessage.RequestMessageGoodPath (0 ms)\n[ RUN      ] UnpackPLDMMessage.ResponseMessageGoodPath\n[       OK ] UnpackPLDMMessage.ResponseMessageGoodPath (0 ms)\n[----------] 3 tests from UnpackPLDMMessage (0 ms total)\n\n[----------] 5 tests from GetPLDMCommands\n[ RUN      ] GetPLDMCommands.testEncodeRequest\n[       OK ] GetPLDMCommands.testEncodeRequest (0 ms)\n[ RUN      ] GetPLDMCommands.testDecodeRequest\n[       OK ] GetPLDMCommands.testDecodeRequest (0 ms)\n[ RUN      ] GetPLDMCommands.testEncodeResponse\n[       OK ] GetPLDMCommands.testEncodeResponse (0 ms)\n[ RUN      ] GetPLDMCommands.testGoodDecodeResponse\n[       OK ] GetPLDMCommands.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetPLDMCommands.testBadDecodeResponse\n[       OK ] GetPLDMCommands.testBadDecodeResponse (0 ms)\n[----------] 5 tests from GetPLDMCommands (0 ms total)\n\n[----------] 3 tests from GetPLDMTypes\n[ RUN      ] GetPLDMTypes.testEncodeResponse\n[       OK ] GetPLDMTypes.testEncodeResponse (0 ms)\n[ RUN      ] GetPLDMTypes.testGoodDecodeResponse\n[       OK ] GetPLDMTypes.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetPLDMTypes.testBadDecodeResponse\n[       OK ] GetPLDMTypes.testBadDecodeResponse (0 ms)\n[----------] 3 tests from GetPLDMTypes (0 ms total)\n\n[----------] 5 tests from GetPLDMVersion\n[ RUN      ] GetPLDMVersion.testGoodEncodeRequest\n[       OK ] GetPLDMVersion.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetPLDMVersion.testBadEncodeRequest\n[       OK ] GetPLDMVersion.testBadEncodeRequest (0 ms)\n[ RUN      ] GetPLDMVersion.testEncodeResponse\n[       OK ] GetPLDMVersion.testEncodeResponse (0 ms)\n[ RUN      ] GetPLDMVersion.testDecodeRequest\n[       OK ] GetPLDMVersion.testDecodeRequest (0 ms)\n[ RUN      ] GetPLDMVersion.testDecodeResponse\n[       OK ] GetPLDMVersion.testDecodeResponse (0 ms)\n[----------] 5 tests from GetPLDMVersion (0 ms total)\n\n[----------] 3 tests from GetTID\n[ RUN      ] GetTID.testEncodeRequest\n[       OK ] GetTID.testEncodeRequest (0 ms)\n[ RUN      ] GetTID.testEncodeResponse\n[       OK ] GetTID.testEncodeResponse (0 ms)\n[ RUN      ] GetTID.testDecodeResponse\n[       OK ] GetTID.testDecodeResponse (0 ms)\n[----------] 3 tests from GetTID (0 ms total)\n\n[----------] 1 test from CcOnlyResponse\n[ RUN      ] CcOnlyResponse.testEncode\n[       OK ] CcOnlyResponse.testEncode (0 ms)\n[----------] 1 test from CcOnlyResponse (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 23 tests from 7 test suites ran. (0 ms total)\n[  PASSED  ] 23 tests.\n", "result": "OK", "starttime": 1636193743.1324723, "duration": 0.05402421951293945, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "246"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_base_test"]}
{"name": "libpldm_platform_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 72 tests from 9 test suites.\n[----------] Global test environment set-up.\n[----------] 6 tests from SetStateEffecterStates\n[ RUN      ] SetStateEffecterStates.testEncodeResponse\n[       OK ] SetStateEffecterStates.testEncodeResponse (0 ms)\n[ RUN      ] SetStateEffecterStates.testEncodeRequest\n[       OK ] SetStateEffecterStates.testEncodeRequest (0 ms)\n[ RUN      ] SetStateEffecterStates.testGoodDecodeResponse\n[       OK ] SetStateEffecterStates.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetStateEffecterStates.testGoodDecodeRequest\n[       OK ] SetStateEffecterStates.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetStateEffecterStates.testBadDecodeRequest\n[       OK ] SetStateEffecterStates.testBadDecodeRequest (0 ms)\n[ RUN      ] SetStateEffecterStates.testBadDecodeResponse\n[       OK ] SetStateEffecterStates.testBadDecodeResponse (0 ms)\n[----------] 6 tests from SetStateEffecterStates (0 ms total)\n\n[----------] 8 tests from GetPDR\n[ RUN      ] GetPDR.testGoodEncodeResponse\n[       OK ] GetPDR.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetPDR.testBadEncodeResponse\n[       OK ] GetPDR.testBadEncodeResponse (0 ms)\n[ RUN      ] GetPDR.testGoodDecodeRequest\n[       OK ] GetPDR.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetPDR.testBadDecodeRequest\n[       OK ] GetPDR.testBadDecodeRequest (0 ms)\n[ RUN      ] GetPDR.testGoodEncodeRequest\n[       OK ] GetPDR.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetPDR.testBadEncodeRequest\n[       OK ] GetPDR.testBadEncodeRequest (0 ms)\n[ RUN      ] GetPDR.testGoodDecodeResponse\n[       OK ] GetPDR.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetPDR.testBadDecodeResponse\n[       OK ] GetPDR.testBadDecodeResponse (0 ms)\n[----------] 8 tests from GetPDR (0 ms total)\n\n[----------] 8 tests from SetNumericEffecterValue\n[ RUN      ] SetNumericEffecterValue.testGoodDecodeRequest\n[       OK ] SetNumericEffecterValue.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetNumericEffecterValue.testBadDecodeRequest\n[       OK ] SetNumericEffecterValue.testBadDecodeRequest (0 ms)\n[ RUN      ] SetNumericEffecterValue.testGoodEncodeRequest\n[       OK ] SetNumericEffecterValue.testGoodEncodeRequest (0 ms)\n[ RUN      ] SetNumericEffecterValue.testBadEncodeRequest\n[       OK ] SetNumericEffecterValue.testBadEncodeRequest (0 ms)\n[ RUN      ] SetNumericEffecterValue.testGoodDecodeResponse\n[       OK ] SetNumericEffecterValue.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetNumericEffecterValue.testBadDecodeResponse\n[       OK ] SetNumericEffecterValue.testBadDecodeResponse (0 ms)\n[ RUN      ] SetNumericEffecterValue.testGoodEncodeResponse\n[       OK ] SetNumericEffecterValue.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetNumericEffecterValue.testBadEncodeResponse\n[       OK ] SetNumericEffecterValue.testBadEncodeResponse (0 ms)\n[----------] 8 tests from SetNumericEffecterValue (0 ms total)\n\n[----------] 8 tests from GetStateSensorReadings\n[ RUN      ] GetStateSensorReadings.testGoodEncodeResponse\n[       OK ] GetStateSensorReadings.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetStateSensorReadings.testBadEncodeResponse\n[       OK ] GetStateSensorReadings.testBadEncodeResponse (0 ms)\n[ RUN      ] GetStateSensorReadings.testGoodDecodeResponse\n[       OK ] GetStateSensorReadings.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetStateSensorReadings.testBadDecodeResponse\n[       OK ] GetStateSensorReadings.testBadDecodeResponse (0 ms)\n[ RUN      ] GetStateSensorReadings.testGoodEncodeRequest\n[       OK ] GetStateSensorReadings.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetStateSensorReadings.testBadEncodeRequest\n[       OK ] GetStateSensorReadings.testBadEncodeRequest (0 ms)\n[ RUN      ] GetStateSensorReadings.testGoodDecodeRequest\n[       OK ] GetStateSensorReadings.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetStateSensorReadings.testBadDecodeRequest\n[       OK ] GetStateSensorReadings.testBadDecodeRequest (0 ms)\n[----------] 8 tests from GetStateSensorReadings (0 ms total)\n\n[----------] 16 tests from PlatformEventMessage\n[ RUN      ] PlatformEventMessage.testGoodStateSensorDecodeRequest\n[       OK ] PlatformEventMessage.testGoodStateSensorDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadDecodeRequest\n[       OK ] PlatformEventMessage.testBadDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodEncodeResponse\n[       OK ] PlatformEventMessage.testGoodEncodeResponse (0 ms)\n[ RUN      ] PlatformEventMessage.testBadEncodeResponse\n[       OK ] PlatformEventMessage.testBadEncodeResponse (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodEncodeRequest\n[       OK ] PlatformEventMessage.testGoodEncodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadEncodeRequest\n[       OK ] PlatformEventMessage.testBadEncodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodDecodeResponse\n[       OK ] PlatformEventMessage.testGoodDecodeResponse (0 ms)\n[ RUN      ] PlatformEventMessage.testBadDecodeResponse\n[       OK ] PlatformEventMessage.testBadDecodeResponse (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodSensorEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testGoodSensorEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadSensorEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testBadSensorEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodSensorOpEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testGoodSensorOpEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadSensorOpEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testBadSensorOpEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodSensorStateEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testGoodSensorStateEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadStateSensorEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testBadStateSensorEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testGoodNumericSensorEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testGoodNumericSensorEventDataDecodeRequest (0 ms)\n[ RUN      ] PlatformEventMessage.testBadNumericSensorEventDataDecodeRequest\n[       OK ] PlatformEventMessage.testBadNumericSensorEventDataDecodeRequest (0 ms)\n[----------] 16 tests from PlatformEventMessage (0 ms total)\n\n[----------] 8 tests from GetNumericEffecterValue\n[ RUN      ] GetNumericEffecterValue.testGoodEncodeRequest\n[       OK ] GetNumericEffecterValue.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetNumericEffecterValue.testBadEncodeRequest\n[       OK ] GetNumericEffecterValue.testBadEncodeRequest (0 ms)\n[ RUN      ] GetNumericEffecterValue.testGoodDecodeRequest\n[       OK ] GetNumericEffecterValue.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetNumericEffecterValue.testBadDecodeRequest\n[       OK ] GetNumericEffecterValue.testBadDecodeRequest (0 ms)\n[ RUN      ] GetNumericEffecterValue.testGoodEncodeResponse\n[       OK ] GetNumericEffecterValue.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetNumericEffecterValue.testBadEncodeResponse\n[       OK ] GetNumericEffecterValue.testBadEncodeResponse (0 ms)\n[ RUN      ] GetNumericEffecterValue.testGoodDecodeResponse\n[       OK ] GetNumericEffecterValue.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetNumericEffecterValue.testBadDecodeResponse\n[       OK ] GetNumericEffecterValue.testBadDecodeResponse (0 ms)\n[----------] 8 tests from GetNumericEffecterValue (0 ms total)\n\n[----------] 2 tests from PldmPDRRepositoryChgEventEvent\n[ RUN      ] PldmPDRRepositoryChgEventEvent.testGoodDecodeRequest\n[       OK ] PldmPDRRepositoryChgEventEvent.testGoodDecodeRequest (0 ms)\n[ RUN      ] PldmPDRRepositoryChgEventEvent.testBadDecodeRequest\n[       OK ] PldmPDRRepositoryChgEventEvent.testBadDecodeRequest (0 ms)\n[----------] 2 tests from PldmPDRRepositoryChgEventEvent (0 ms total)\n\n[----------] 8 tests from GetSensorReading\n[ RUN      ] GetSensorReading.testGoodEncodeRequest\n[       OK ] GetSensorReading.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetSensorReading.testBadEncodeRequest\n[       OK ] GetSensorReading.testBadEncodeRequest (0 ms)\n[ RUN      ] GetSensorReading.testGoodDecodeRequest\n[       OK ] GetSensorReading.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetSensorReading.testBadDecodeRequest\n[       OK ] GetSensorReading.testBadDecodeRequest (0 ms)\n[ RUN      ] GetSensorReading.testGoodEncodeResponse\n[       OK ] GetSensorReading.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetSensorReading.testBadEncodeResponse\n[       OK ] GetSensorReading.testBadEncodeResponse (0 ms)\n[ RUN      ] GetSensorReading.testGoodDecodeResponse\n[       OK ] GetSensorReading.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetSensorReading.testBadDecodeResponse\n[       OK ] GetSensorReading.testBadDecodeResponse (0 ms)\n[----------] 8 tests from GetSensorReading (0 ms total)\n\n[----------] 8 tests from SetEventReceiver\n[ RUN      ] SetEventReceiver.testGoodEncodeRequest\n[       OK ] SetEventReceiver.testGoodEncodeRequest (0 ms)\n[ RUN      ] SetEventReceiver.testBadEncodeRequest\n[       OK ] SetEventReceiver.testBadEncodeRequest (0 ms)\n[ RUN      ] SetEventReceiver.testGoodDecodeResponse\n[       OK ] SetEventReceiver.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetEventReceiver.testBadDecodeResponse\n[       OK ] SetEventReceiver.testBadDecodeResponse (0 ms)\n[ RUN      ] SetEventReceiver.testGoodEncodeResponse\n[       OK ] SetEventReceiver.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetEventReceiver.testBadEncodeResponse\n[       OK ] SetEventReceiver.testBadEncodeResponse (0 ms)\n[ RUN      ] SetEventReceiver.testGoodDecodeRequest\n[       OK ] SetEventReceiver.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetEventReceiver.testBadDecodeRequest\n[       OK ] SetEventReceiver.testBadDecodeRequest (0 ms)\n[----------] 8 tests from SetEventReceiver (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 72 tests from 9 test suites ran. (0 ms total)\n[  PASSED  ] 72 tests.\n", "result": "OK", "starttime": 1636193743.137784, "duration": 0.049683570861816406, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "117"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_platform_test"]}
{"name": "libpldm_bios_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 41 tests from 6 test suites.\n[----------] Global test environment set-up.\n[----------] 3 tests from GetDateTime\n[ RUN      ] GetDateTime.testEncodeRequest\n[       OK ] GetDateTime.testEncodeRequest (0 ms)\n[ RUN      ] GetDateTime.testEncodeResponse\n[       OK ] GetDateTime.testEncodeResponse (0 ms)\n[ RUN      ] GetDateTime.testDecodeResponse\n[       OK ] GetDateTime.testDecodeResponse (0 ms)\n[----------] 3 tests from GetDateTime (0 ms total)\n\n[----------] 8 tests from SetDateTime\n[ RUN      ] SetDateTime.testGoodEncodeResponse\n[       OK ] SetDateTime.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetDateTime.testBadEncodeResponse\n[       OK ] SetDateTime.testBadEncodeResponse (0 ms)\n[ RUN      ] SetDateTime.testGoodDecodeResponse\n[       OK ] SetDateTime.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetDateTime.testBadDecodeResponse\n[       OK ] SetDateTime.testBadDecodeResponse (0 ms)\n[ RUN      ] SetDateTime.testGoodEncodeRequset\n[       OK ] SetDateTime.testGoodEncodeRequset (0 ms)\n[ RUN      ] SetDateTime.testBadEncodeRequset\n[       OK ] SetDateTime.testBadEncodeRequset (0 ms)\n[ RUN      ] SetDateTime.testGoodDecodeRequest\n[       OK ] SetDateTime.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetDateTime.testBadDecodeRequest\n[       OK ] SetDateTime.testBadDecodeRequest (0 ms)\n[----------] 8 tests from SetDateTime (0 ms total)\n\n[----------] 7 tests from GetBIOSTable\n[ RUN      ] GetBIOSTable.testGoodEncodeResponse\n[       OK ] GetBIOSTable.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetBIOSTable.testBadEncodeResponse\n[       OK ] GetBIOSTable.testBadEncodeResponse (0 ms)\n[ RUN      ] GetBIOSTable.testGoodEncodeRequest\n[       OK ] GetBIOSTable.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetBIOSTable.testBadEncodeRequest\n[       OK ] GetBIOSTable.testBadEncodeRequest (0 ms)\n[ RUN      ] GetBIOSTable.testGoodDecodeRequest\n[       OK ] GetBIOSTable.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetBIOSTable.testBadDecodeRequest\n[       OK ] GetBIOSTable.testBadDecodeRequest (0 ms)\n[ RUN      ] GetBIOSTable.testDecodeResponse\n[       OK ] GetBIOSTable.testDecodeResponse (0 ms)\n[----------] 7 tests from GetBIOSTable (0 ms total)\n\n[----------] 7 tests from GetBIOSAttributeCurrentValueByHandle\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testGoodDecodeRequest\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testBadDecodeRequest\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testBadDecodeRequest (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testGoodEncodeRequest\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testBadEncodeRequest\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testBadEncodeRequest (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testGoodEncodeResponse\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testBadEncodeResponse\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testBadEncodeResponse (0 ms)\n[ RUN      ] GetBIOSAttributeCurrentValueByHandle.testDecodeResponse\n[       OK ] GetBIOSAttributeCurrentValueByHandle.testDecodeResponse (0 ms)\n[----------] 7 tests from GetBIOSAttributeCurrentValueByHandle (0 ms total)\n\n[----------] 8 tests from SetBiosAttributeCurrentValue\n[ RUN      ] SetBiosAttributeCurrentValue.testGoodEncodeRequest\n[       OK ] SetBiosAttributeCurrentValue.testGoodEncodeRequest (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testBadEncodeRequest\n[       OK ] SetBiosAttributeCurrentValue.testBadEncodeRequest (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testGoodDecodeRequest\n[       OK ] SetBiosAttributeCurrentValue.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testBadDecodeRequest\n[       OK ] SetBiosAttributeCurrentValue.testBadDecodeRequest (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testGoodEncodeResponse\n[       OK ] SetBiosAttributeCurrentValue.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testBadEncodeResponse\n[       OK ] SetBiosAttributeCurrentValue.testBadEncodeResponse (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testGoodDecodeResponse\n[       OK ] SetBiosAttributeCurrentValue.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetBiosAttributeCurrentValue.testBadDecodeResponse\n[       OK ] SetBiosAttributeCurrentValue.testBadDecodeResponse (0 ms)\n[----------] 8 tests from SetBiosAttributeCurrentValue (0 ms total)\n\n[----------] 8 tests from SetBIOSTable\n[ RUN      ] SetBIOSTable.testGoodEncodeRequest\n[       OK ] SetBIOSTable.testGoodEncodeRequest (0 ms)\n[ RUN      ] SetBIOSTable.testBadEncodeRequest\n[       OK ] SetBIOSTable.testBadEncodeRequest (0 ms)\n[ RUN      ] SetBIOSTable.testGoodDecodeResponse\n[       OK ] SetBIOSTable.testGoodDecodeResponse (0 ms)\n[ RUN      ] SetBIOSTable.testBadDecodeResponse\n[       OK ] SetBIOSTable.testBadDecodeResponse (0 ms)\n[ RUN      ] SetBIOSTable.testGoodEncodeResponse\n[       OK ] SetBIOSTable.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetBIOSTable.testBadEncodeResponse\n[       OK ] SetBIOSTable.testBadEncodeResponse (0 ms)\n[ RUN      ] SetBIOSTable.testGoodDecodeRequest\n[       OK ] SetBIOSTable.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetBIOSTable.testBadDecodeRequest\n[       OK ] SetBIOSTable.testBadDecodeRequest (0 ms)\n[----------] 8 tests from SetBIOSTable (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 41 tests from 6 test suites ran. (0 ms total)\n[  PASSED  ] 41 tests.\n", "result": "OK", "starttime": 1636193743.1442924, "duration": 0.043933868408203125, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "164"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_bios_test"]}
{"name": "libpldm_bios_table_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 26 tests from 6 test suites.\n[----------] Global test environment set-up.\n[----------] 9 tests from AttrTable\n[ RUN      ] AttrTable.HeaderDecodeTest\n[       OK ] AttrTable.HeaderDecodeTest (0 ms)\n[ RUN      ] AttrTable.EnumEntryDecodeTest\n[       OK ] AttrTable.EnumEntryDecodeTest (0 ms)\n[ RUN      ] AttrTable.EnumEntryEncodeTest\n[       OK ] AttrTable.EnumEntryEncodeTest (1 ms)\n[ RUN      ] AttrTable.StringEntryDecodeTest\n[       OK ] AttrTable.StringEntryDecodeTest (0 ms)\n[ RUN      ] AttrTable.StringEntryEncodeTest\n[       OK ] AttrTable.StringEntryEncodeTest (1 ms)\n[ RUN      ] AttrTable.integerEntryEncodeTest\n[       OK ] AttrTable.integerEntryEncodeTest (0 ms)\n[ RUN      ] AttrTable.integerEntryDecodeTest\n[       OK ] AttrTable.integerEntryDecodeTest (0 ms)\n[ RUN      ] AttrTable.ItearatorTest\n[       OK ] AttrTable.ItearatorTest (0 ms)\n[ RUN      ] AttrTable.FindTest\n[       OK ] AttrTable.FindTest (0 ms)\n[----------] 9 tests from AttrTable (3 ms total)\n\n[----------] 10 tests from AttrValTable\n[ RUN      ] AttrValTable.HeaderDecodeTest\n[       OK ] AttrValTable.HeaderDecodeTest (0 ms)\n[ RUN      ] AttrValTable.EnumEntryEncodeTest\n[       OK ] AttrValTable.EnumEntryEncodeTest (1 ms)\n[ RUN      ] AttrValTable.EnumEntryDecodeTest\n[       OK ] AttrValTable.EnumEntryDecodeTest (0 ms)\n[ RUN      ] AttrValTable.stringEntryEncodeTest\n[       OK ] AttrValTable.stringEntryEncodeTest (1 ms)\n[ RUN      ] AttrValTable.StringEntryDecodeTest\n[       OK ] AttrValTable.StringEntryDecodeTest (0 ms)\n[ RUN      ] AttrValTable.integerEntryEncodeTest\n[       OK ] AttrValTable.integerEntryEncodeTest (1 ms)\n[ RUN      ] AttrValTable.integerEntryDecodeTest\n[       OK ] AttrValTable.integerEntryDecodeTest (0 ms)\n[ RUN      ] AttrValTable.IteratorTest\n[       OK ] AttrValTable.IteratorTest (0 ms)\n[ RUN      ] AttrValTable.FindTest\n[       OK ] AttrValTable.FindTest (1 ms)\n[ RUN      ] AttrValTable.CopyAndUpdateTest\n[       OK ] AttrValTable.CopyAndUpdateTest (0 ms)\n[----------] 10 tests from AttrValTable (5 ms total)\n\n[----------] 4 tests from StringTable\n[ RUN      ] StringTable.EntryEncodeTest\n[       OK ] StringTable.EntryEncodeTest (1 ms)\n[ RUN      ] StringTable.EntryDecodeTest\n[       OK ] StringTable.EntryDecodeTest (0 ms)\n[ RUN      ] StringTable.IteratorTest\n[       OK ] StringTable.IteratorTest (0 ms)\n[ RUN      ] StringTable.FindTest\n[       OK ] StringTable.FindTest (0 ms)\n[----------] 4 tests from StringTable (1 ms total)\n\n[----------] 1 test from Itearator\n[ RUN      ] Itearator.DeathTest\n[       OK ] Itearator.DeathTest (1 ms)\n[----------] 1 test from Itearator (1 ms total)\n\n[----------] 1 test from PadAndChecksum\n[ RUN      ] PadAndChecksum.PadAndChecksum\n[       OK ] PadAndChecksum.PadAndChecksum (0 ms)\n[----------] 1 test from PadAndChecksum (0 ms total)\n\n[----------] 1 test from BIOSTableChecksum\n[ RUN      ] BIOSTableChecksum.testBIOSTableChecksum\n[       OK ] BIOSTableChecksum.testBIOSTableChecksum (0 ms)\n[----------] 1 test from BIOSTableChecksum (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 26 tests from 6 test suites ran. (11 ms total)\n[  PASSED  ] 26 tests.\n", "result": "OK", "starttime": 1636193743.149593, "duration": 0.03942251205444336, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "79"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_bios_table_test"]}
{"name": "libpldm_fru_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 26 tests from 5 test suites.\n[----------] Global test environment set-up.\n[----------] 6 tests from GetFruRecordTableMetadata\n[ RUN      ] GetFruRecordTableMetadata.testGoodEncodeRequest\n[       OK ] GetFruRecordTableMetadata.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetFruRecordTableMetadata.testBadEncodeRequest\n[       OK ] GetFruRecordTableMetadata.testBadEncodeRequest (0 ms)\n[ RUN      ] GetFruRecordTableMetadata.testGoodDecodeResponse\n[       OK ] GetFruRecordTableMetadata.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetFruRecordTableMetadata.testBadDecodeResponse\n[       OK ] GetFruRecordTableMetadata.testBadDecodeResponse (0 ms)\n[ RUN      ] GetFruRecordTableMetadata.testGoodEncodeResponse\n[       OK ] GetFruRecordTableMetadata.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetFruRecordTableMetadata.testBadEncodeResponse\n[       OK ] GetFruRecordTableMetadata.testBadEncodeResponse (0 ms)\n[----------] 6 tests from GetFruRecordTableMetadata (0 ms total)\n\n[----------] 8 tests from GetFruRecordTable\n[ RUN      ] GetFruRecordTable.testGoodDecodeRequest\n[       OK ] GetFruRecordTable.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetFruRecordTable.testBadDecodeRequest\n[       OK ] GetFruRecordTable.testBadDecodeRequest (0 ms)\n[ RUN      ] GetFruRecordTable.testGoodEncodeResponse\n[       OK ] GetFruRecordTable.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetFruRecordTable.testBadEncodeResponse\n[       OK ] GetFruRecordTable.testBadEncodeResponse (0 ms)\n[ RUN      ] GetFruRecordTable.testGoodEncodeRequest\n[       OK ] GetFruRecordTable.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetFruRecordTable.testBadEncodeRequest\n[       OK ] GetFruRecordTable.testBadEncodeRequest (0 ms)\n[ RUN      ] GetFruRecordTable.testGoodDecodeResponse\n[       OK ] GetFruRecordTable.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetFruRecordTable.testBadDecodeResponse\n[       OK ] GetFruRecordTable.testBadDecodeResponse (0 ms)\n[----------] 8 tests from GetFruRecordTable (0 ms total)\n\n[----------] 4 tests from GetFRURecordByOption\n[ RUN      ] GetFRURecordByOption.testGoodEncodeRequest\n[       OK ] GetFRURecordByOption.testGoodEncodeRequest (0 ms)\n[ RUN      ] GetFRURecordByOption.testBadEncodeRequest\n[       OK ] GetFRURecordByOption.testBadEncodeRequest (0 ms)\n[ RUN      ] GetFRURecordByOption.testGoodDecodeRequest\n[       OK ] GetFRURecordByOption.testGoodDecodeRequest (0 ms)\n[ RUN      ] GetFRURecordByOption.testBadDecodeRequest\n[       OK ] GetFRURecordByOption.testBadDecodeRequest (0 ms)\n[----------] 4 tests from GetFRURecordByOption (0 ms total)\n\n[----------] 4 tests from GetFruRecordByOption\n[ RUN      ] GetFruRecordByOption.testGoodEncodeResponse\n[       OK ] GetFruRecordByOption.testGoodEncodeResponse (0 ms)\n[ RUN      ] GetFruRecordByOption.testBadEncodeResponse\n[       OK ] GetFruRecordByOption.testBadEncodeResponse (0 ms)\n[ RUN      ] GetFruRecordByOption.testGoodDecodeResponse\n[       OK ] GetFruRecordByOption.testGoodDecodeResponse (0 ms)\n[ RUN      ] GetFruRecordByOption.testBadDecodeResponse\n[       OK ] GetFruRecordByOption.testBadDecodeResponse (0 ms)\n[----------] 4 tests from GetFruRecordByOption (0 ms total)\n\n[----------] 4 tests from SetFRURecordTable\n[ RUN      ] SetFRURecordTable.testGoodEncodeResponse\n[       OK ] SetFRURecordTable.testGoodEncodeResponse (0 ms)\n[ RUN      ] SetFRURecordTable.testBadEncodeResponse\n[       OK ] SetFRURecordTable.testBadEncodeResponse (0 ms)\n[ RUN      ] SetFRURecordTable.testGoodDecodeRequest\n[       OK ] SetFRURecordTable.testGoodDecodeRequest (0 ms)\n[ RUN      ] SetFRURecordTable.testBadDecodeRequest\n[       OK ] SetFRURecordTable.testBadDecodeRequest (0 ms)\n[----------] 4 tests from SetFRURecordTable (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 26 tests from 5 test suites ran. (0 ms total)\n[  PASSED  ] 26 tests.\n", "result": "OK", "starttime": 1636193743.155304, "duration": 0.03433561325073242, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "255"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_fru_test"]}
{"name": "libpldm_utils_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 5 tests from 5 test suites.\n[----------] Global test environment set-up.\n[----------] 1 test from Crc32\n[ RUN      ] Crc32.CheckSumTest\n[       OK ] Crc32.CheckSumTest (0 ms)\n[----------] 1 test from Crc32 (0 ms total)\n\n[----------] 1 test from Crc8\n[ RUN      ] Crc8.CheckSumTest\n[       OK ] Crc8.CheckSumTest (0 ms)\n[----------] 1 test from Crc8 (0 ms total)\n\n[----------] 1 test from Ver2string\n[ RUN      ] Ver2string.Ver2string\n[       OK ] Ver2string.Ver2string (0 ms)\n[----------] 1 test from Ver2string (0 ms total)\n\n[----------] 1 test from BcdConversion\n[ RUN      ] BcdConversion.BcdCoversion\n[       OK ] BcdConversion.BcdCoversion (0 ms)\n[----------] 1 test from BcdConversion (0 ms total)\n\n[----------] 1 test from TimeLegal\n[ RUN      ] TimeLegal.TimeLegal\n[       OK ] TimeLegal.TimeLegal (0 ms)\n[----------] 1 test from TimeLegal (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 5 tests from 5 test suites ran. (0 ms total)\n[  PASSED  ] 5 tests.\n", "result": "OK", "starttime": 1636193743.1599567, "duration": 0.03090691566467285, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "230"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_utils_test"]}
{"name": "libpldm_pdr_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 17 tests from 3 test suites.\n[----------] Global test environment set-up.\n[----------] 4 tests from PDRAccess\n[ RUN      ] PDRAccess.testInit\n[       OK ] PDRAccess.testInit (0 ms)\n[ RUN      ] PDRAccess.testGet\n[       OK ] PDRAccess.testGet (0 ms)\n[ RUN      ] PDRAccess.testGetNext\n[       OK ] PDRAccess.testGetNext (0 ms)\n[ RUN      ] PDRAccess.testFindByType\n[       OK ] PDRAccess.testFindByType (0 ms)\n[----------] 4 tests from PDRAccess (0 ms total)\n\n[----------] 4 tests from PDRUpdate\n[ RUN      ] PDRUpdate.testAdd\n[       OK ] PDRUpdate.testAdd (0 ms)\n[ RUN      ] PDRUpdate.testRemove\n[       OK ] PDRUpdate.testRemove (0 ms)\n[ RUN      ] PDRUpdate.testAddFruRecordSet\n[       OK ] PDRUpdate.testAddFruRecordSet (0 ms)\n[ RUN      ] PDRUpdate.tesFindtFruRecordSet\n[       OK ] PDRUpdate.tesFindtFruRecordSet (0 ms)\n[----------] 4 tests from PDRUpdate (0 ms total)\n\n[----------] 9 tests from EntityAssociationPDR\n[ RUN      ] EntityAssociationPDR.testInit\n[       OK ] EntityAssociationPDR.testInit (0 ms)\n[ RUN      ] EntityAssociationPDR.testBuild\n[       OK ] EntityAssociationPDR.testBuild (0 ms)\n[ RUN      ] EntityAssociationPDR.testSpecialTrees\n[       OK ] EntityAssociationPDR.testSpecialTrees (0 ms)\n[ RUN      ] EntityAssociationPDR.testPDR\n[       OK ] EntityAssociationPDR.testPDR (0 ms)\n[ RUN      ] EntityAssociationPDR.testFind\n[       OK ] EntityAssociationPDR.testFind (0 ms)\n[ RUN      ] EntityAssociationPDR.testCopyTree\n[       OK ] EntityAssociationPDR.testCopyTree (0 ms)\n[ RUN      ] EntityAssociationPDR.testExtract\n[       OK ] EntityAssociationPDR.testExtract (0 ms)\n[ RUN      ] EntityAssociationPDR.testGetChildren\n[       OK ] EntityAssociationPDR.testGetChildren (0 ms)\n[ RUN      ] EntityAssociationPDR.testEntityInstanceNumber\n[       OK ] EntityAssociationPDR.testEntityInstanceNumber (0 ms)\n[----------] 9 tests from EntityAssociationPDR (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 17 tests from 3 test suites ran. (0 ms total)\n[  PASSED  ] 17 tests.\n", "result": "OK", "starttime": 1636193743.1661806, "duration": 0.02573680877685547, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "220"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_pdr_test"]}
{"name": "libpldm_firmware_update_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 63 tests from 17 test suites.\n[----------] Global test environment set-up.\n[----------] 2 tests from DecodePackageHeaderInfo\n[ RUN      ] DecodePackageHeaderInfo.goodPath\n[       OK ] DecodePackageHeaderInfo.goodPath (0 ms)\n[ RUN      ] DecodePackageHeaderInfo.errorPaths\n[       OK ] DecodePackageHeaderInfo.errorPaths (0 ms)\n[----------] 2 tests from DecodePackageHeaderInfo (0 ms total)\n\n[----------] 3 tests from DecodeFirmwareDeviceIdRecord\n[ RUN      ] DecodeFirmwareDeviceIdRecord.goodPath\n[       OK ] DecodeFirmwareDeviceIdRecord.goodPath (0 ms)\n[ RUN      ] DecodeFirmwareDeviceIdRecord.goodPathNofwDevicePkgData\n[       OK ] DecodeFirmwareDeviceIdRecord.goodPathNofwDevicePkgData (0 ms)\n[ RUN      ] DecodeFirmwareDeviceIdRecord.ErrorPaths\n[       OK ] DecodeFirmwareDeviceIdRecord.ErrorPaths (0 ms)\n[----------] 3 tests from DecodeFirmwareDeviceIdRecord (0 ms total)\n\n[----------] 3 tests from DecodeDescriptors\n[ RUN      ] DecodeDescriptors.goodPath3Descriptors\n[       OK ] DecodeDescriptors.goodPath3Descriptors (0 ms)\n[ RUN      ] DecodeDescriptors.errorPathDecodeDescriptorTLV\n[       OK ] DecodeDescriptors.errorPathDecodeDescriptorTLV (0 ms)\n[ RUN      ] DecodeDescriptors.errorPathVendorDefinedDescriptor\n[       OK ] DecodeDescriptors.errorPathVendorDefinedDescriptor (0 ms)\n[----------] 3 tests from DecodeDescriptors (0 ms total)\n\n[----------] 2 tests from DecodeComponentImageInfo\n[ RUN      ] DecodeComponentImageInfo.goodPath\n[       OK ] DecodeComponentImageInfo.goodPath (0 ms)\n[ RUN      ] DecodeComponentImageInfo.errorPaths\n[       OK ] DecodeComponentImageInfo.errorPaths (0 ms)\n[----------] 2 tests from DecodeComponentImageInfo (0 ms total)\n\n[----------] 2 tests from QueryDeviceIdentifiers\n[ RUN      ] QueryDeviceIdentifiers.goodPathEncodeRequest\n[       OK ] QueryDeviceIdentifiers.goodPathEncodeRequest (0 ms)\n[ RUN      ] QueryDeviceIdentifiers.goodPathDecodeResponse\n[       OK ] QueryDeviceIdentifiers.goodPathDecodeResponse (0 ms)\n[----------] 2 tests from QueryDeviceIdentifiers (0 ms total)\n\n[----------] 7 tests from GetFirmwareParameters\n[ RUN      ] GetFirmwareParameters.goodPathEncodeRequest\n[       OK ] GetFirmwareParameters.goodPathEncodeRequest (0 ms)\n[ RUN      ] GetFirmwareParameters.decodeResponse\n[       OK ] GetFirmwareParameters.decodeResponse (0 ms)\n[ RUN      ] GetFirmwareParameters.decodeResponseZeroCompCount\n[       OK ] GetFirmwareParameters.decodeResponseZeroCompCount (0 ms)\n[ RUN      ] GetFirmwareParameters.decodeResponseNoPendingCompImageVersionStrZeroCompCount\n[       OK ] GetFirmwareParameters.decodeResponseNoPendingCompImageVersionStrZeroCompCount (0 ms)\n[ RUN      ] GetFirmwareParameters.decodeResponseErrorCompletionCode\n[       OK ] GetFirmwareParameters.decodeResponseErrorCompletionCode (0 ms)\n[ RUN      ] GetFirmwareParameters.errorPathdecodeResponse\n[       OK ] GetFirmwareParameters.errorPathdecodeResponse (0 ms)\n[ RUN      ] GetFirmwareParameters.goodPathDecodeComponentParameterEntry\n[       OK ] GetFirmwareParameters.goodPathDecodeComponentParameterEntry (0 ms)\n[----------] 7 tests from GetFirmwareParameters (0 ms total)\n\n[----------] 4 tests from RequestUpdate\n[ RUN      ] RequestUpdate.goodPathEncodeRequest\n[       OK ] RequestUpdate.goodPathEncodeRequest (0 ms)\n[ RUN      ] RequestUpdate.errorPathEncodeRequest\n[       OK ] RequestUpdate.errorPathEncodeRequest (0 ms)\n[ RUN      ] RequestUpdate.goodPathDecodeResponse\n[       OK ] RequestUpdate.goodPathDecodeResponse (0 ms)\n[ RUN      ] RequestUpdate.errorPathDecodeResponse\n[       OK ] RequestUpdate.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from RequestUpdate (0 ms total)\n\n[----------] 4 tests from PassComponentTable\n[ RUN      ] PassComponentTable.goodPathEncodeRequest\n[       OK ] PassComponentTable.goodPathEncodeRequest (0 ms)\n[ RUN      ] PassComponentTable.errorPathEncodeRequest\n[       OK ] PassComponentTable.errorPathEncodeRequest (0 ms)\n[ RUN      ] PassComponentTable.goodPathDecodeResponse\n[       OK ] PassComponentTable.goodPathDecodeResponse (0 ms)\n[ RUN      ] PassComponentTable.errorPathDecodeResponse\n[       OK ] PassComponentTable.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from PassComponentTable (0 ms total)\n\n[----------] 4 tests from UpdateComponent\n[ RUN      ] UpdateComponent.goodPathEncodeRequest\n[       OK ] UpdateComponent.goodPathEncodeRequest (0 ms)\n[ RUN      ] UpdateComponent.errorPathEncodeRequest\n[       OK ] UpdateComponent.errorPathEncodeRequest (0 ms)\n[ RUN      ] UpdateComponent.goodPathDecodeResponse\n[       OK ] UpdateComponent.goodPathDecodeResponse (0 ms)\n[ RUN      ] UpdateComponent.errorPathDecodeResponse\n[       OK ] UpdateComponent.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from UpdateComponent (0 ms total)\n\n[----------] 4 tests from RequestFirmwareData\n[ RUN      ] RequestFirmwareData.goodPathDecodeRequest\n[       OK ] RequestFirmwareData.goodPathDecodeRequest (0 ms)\n[ RUN      ] RequestFirmwareData.errorPathDecodeRequest\n[       OK ] RequestFirmwareData.errorPathDecodeRequest (0 ms)\n[ RUN      ] RequestFirmwareData.goodPathEncodeResponse\n[       OK ] RequestFirmwareData.goodPathEncodeResponse (0 ms)\n[ RUN      ] RequestFirmwareData.errorPathEncodeResponse\n[       OK ] RequestFirmwareData.errorPathEncodeResponse (0 ms)\n[----------] 4 tests from RequestFirmwareData (0 ms total)\n\n[----------] 4 tests from TransferComplete\n[ RUN      ] TransferComplete.goodPathDecodeRequest\n[       OK ] TransferComplete.goodPathDecodeRequest (0 ms)\n[ RUN      ] TransferComplete.errorPathDecodeRequest\n[       OK ] TransferComplete.errorPathDecodeRequest (0 ms)\n[ RUN      ] TransferComplete.goodPathEncodeResponse\n[       OK ] TransferComplete.goodPathEncodeResponse (0 ms)\n[ RUN      ] TransferComplete.errorPathEncodeResponse\n[       OK ] TransferComplete.errorPathEncodeResponse (0 ms)\n[----------] 4 tests from TransferComplete (0 ms total)\n\n[----------] 4 tests from VerifyComplete\n[ RUN      ] VerifyComplete.goodPathDecodeRequest\n[       OK ] VerifyComplete.goodPathDecodeRequest (0 ms)\n[ RUN      ] VerifyComplete.errorPathDecodeRequest\n[       OK ] VerifyComplete.errorPathDecodeRequest (0 ms)\n[ RUN      ] VerifyComplete.goodPathEncodeResponse\n[       OK ] VerifyComplete.goodPathEncodeResponse (0 ms)\n[ RUN      ] VerifyComplete.errorPathEncodeResponse\n[       OK ] VerifyComplete.errorPathEncodeResponse (0 ms)\n[----------] 4 tests from VerifyComplete (0 ms total)\n\n[----------] 4 tests from ApplyComplete\n[ RUN      ] ApplyComplete.goodPathDecodeRequest\n[       OK ] ApplyComplete.goodPathDecodeRequest (0 ms)\n[ RUN      ] ApplyComplete.errorPathDecodeRequest\n[       OK ] ApplyComplete.errorPathDecodeRequest (0 ms)\n[ RUN      ] ApplyComplete.goodPathEncodeResponse\n[       OK ] ApplyComplete.goodPathEncodeResponse (0 ms)\n[ RUN      ] ApplyComplete.errorPathEncodeResponse\n[       OK ] ApplyComplete.errorPathEncodeResponse (0 ms)\n[----------] 4 tests from ApplyComplete (0 ms total)\n\n[----------] 4 tests from ActivateFirmware\n[ RUN      ] ActivateFirmware.goodPathEncodeRequest\n[       OK ] ActivateFirmware.goodPathEncodeRequest (0 ms)\n[ RUN      ] ActivateFirmware.errorPathEncodeRequest\n[       OK ] ActivateFirmware.errorPathEncodeRequest (0 ms)\n[ RUN      ] ActivateFirmware.goodPathDecodeResponse\n[       OK ] ActivateFirmware.goodPathDecodeResponse (0 ms)\n[ RUN      ] ActivateFirmware.errorPathDecodeResponse\n[       OK ] ActivateFirmware.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from ActivateFirmware (0 ms total)\n\n[----------] 4 tests from GetStatus\n[ RUN      ] GetStatus.goodPathEncodeRequest\n[       OK ] GetStatus.goodPathEncodeRequest (0 ms)\n[ RUN      ] GetStatus.errorPathEncodeRequest\n[       OK ] GetStatus.errorPathEncodeRequest (0 ms)\n[ RUN      ] GetStatus.goodPathDecodeResponse\n[       OK ] GetStatus.goodPathDecodeResponse (0 ms)\n[ RUN      ] GetStatus.errorPathDecodeResponse\n[       OK ] GetStatus.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from GetStatus (0 ms total)\n\n[----------] 4 tests from CancelUpdateComponent\n[ RUN      ] CancelUpdateComponent.goodPathEncodeRequest\n[       OK ] CancelUpdateComponent.goodPathEncodeRequest (0 ms)\n[ RUN      ] CancelUpdateComponent.errorPathEncodeRequest\n[       OK ] CancelUpdateComponent.errorPathEncodeRequest (0 ms)\n[ RUN      ] CancelUpdateComponent.testGoodDecodeResponse\n[       OK ] CancelUpdateComponent.testGoodDecodeResponse (0 ms)\n[ RUN      ] CancelUpdateComponent.testBadDecodeResponse\n[       OK ] CancelUpdateComponent.testBadDecodeResponse (0 ms)\n[----------] 4 tests from CancelUpdateComponent (0 ms total)\n\n[----------] 4 tests from CancelUpdate\n[ RUN      ] CancelUpdate.goodPathEncodeRequest\n[       OK ] CancelUpdate.goodPathEncodeRequest (0 ms)\n[ RUN      ] CancelUpdate.errorPathEncodeRequest\n[       OK ] CancelUpdate.errorPathEncodeRequest (0 ms)\n[ RUN      ] CancelUpdate.goodPathDecodeResponse\n[       OK ] CancelUpdate.goodPathDecodeResponse (0 ms)\n[ RUN      ] CancelUpdate.errorPathDecodeResponse\n[       OK ] CancelUpdate.errorPathDecodeResponse (0 ms)\n[----------] 4 tests from CancelUpdate (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 63 tests from 17 test suites ran. (0 ms total)\n[  PASSED  ] 63 tests.\n", "result": "OK", "starttime": 1636193743.1719654, "duration": 0.07385563850402832, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "231"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldm/tests/libpldm_firmware_update_test"]}
{"name": "libpldmresponder_base_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 6 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 6 tests from TestBaseCommands\n[ RUN      ] TestBaseCommands.testPLDMTypesGoodRequest\n[       OK ] TestBaseCommands.testPLDMTypesGoodRequest (1 ms)\n[ RUN      ] TestBaseCommands.testGetPLDMCommandsGoodRequest\n[       OK ] TestBaseCommands.testGetPLDMCommandsGoodRequest (0 ms)\n[ RUN      ] TestBaseCommands.testGetPLDMCommandsBadRequest\n[       OK ] TestBaseCommands.testGetPLDMCommandsBadRequest (0 ms)\n[ RUN      ] TestBaseCommands.testGetPLDMVersionGoodRequest\n[       OK ] TestBaseCommands.testGetPLDMVersionGoodRequest (0 ms)\n[ RUN      ] TestBaseCommands.testGetPLDMVersionBadRequest\n[       OK ] TestBaseCommands.testGetPLDMVersionBadRequest (0 ms)\n[ RUN      ] TestBaseCommands.testGetTIDGoodRequest\n[       OK ] TestBaseCommands.testGetTIDGoodRequest (0 ms)\n[----------] 6 tests from TestBaseCommands (3 ms total)\n\n[----------] Global test environment tear-down\n[==========] 6 tests from 1 test suite ran. (3 ms total)\n[  PASSED  ] 6 tests.\n", "result": "OK", "starttime": 1636193743.19272, "duration": 0.07387018203735352, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "173"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_base_test"]}
{"name": "libpldmresponder_bios_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 2 tests from 2 test suites.\n[----------] Global test environment set-up.\n[----------] 1 test from epochToBCDTime\n[ RUN      ] epochToBCDTime.testTime\n[       OK ] epochToBCDTime.testTime (0 ms)\n[----------] 1 test from epochToBCDTime (0 ms total)\n\n[----------] 1 test from timeToEpoch\n[ RUN      ] timeToEpoch.testTime0\n[       OK ] timeToEpoch.testTime0 (0 ms)\n[----------] 1 test from timeToEpoch (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 2 test suites ran. (0 ms total)\n[  PASSED  ] 2 tests.\n", "result": "OK", "starttime": 1636193743.1983333, "duration": 0.07040953636169434, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "145"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_test"]}
{"name": "libpldmresponder_bios_attribute_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 1 test from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 1 test from BIOSAttribute\n[ RUN      ] BIOSAttribute.CtorTest\n[       OK ] BIOSAttribute.CtorTest (0 ms)\n[----------] 1 test from BIOSAttribute (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test suite ran. (0 ms total)\n[  PASSED  ] 1 test.\n", "result": "OK", "starttime": 1636193743.2044384, "duration": 0.06493616104125977, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "120"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_attribute_test"]}
{"name": "libpldmresponder_bios_integer_attribute_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from TestBIOSIntegerAttribute\n[ RUN      ] TestBIOSIntegerAttribute.CtorTest\n[       OK ] TestBIOSIntegerAttribute.CtorTest (0 ms)\n[ RUN      ] TestBIOSIntegerAttribute.ConstructEntry\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_integer_attribute_test.cpp:120:\n    Function call: findHandle(@0x7ffc40fdbb98 \"VDD_AVSBUS_RAIL\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_integer_attribute_test.cpp:120:\n    Function call: findHandle(@0x7ffc40fdbcb8 \"VDD_AVSBUS_RAIL\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_integer_attribute_test.cpp:120:\n    Function call: findHandle(@0x7ffc40fdbcb8 \"VDD_AVSBUS_RAIL\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSIntegerAttribute.ConstructEntry (1 ms)\n[ RUN      ] TestBIOSIntegerAttribute.setAttrValueOnDbus\n[       OK ] TestBIOSIntegerAttribute.setAttrValueOnDbus (0 ms)\n[----------] 3 tests from TestBIOSIntegerAttribute (2 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (2 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.2265768, "duration": 0.07659363746643066, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "239"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_integer_attribute_test"], "stderr": "Get Integer Attribute Value Error: AttributeName = VDD_AVSBUS_RAIL\n"}
{"name": "libpldmresponder_bios_enum_attribute_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from TestBIOSEnumAttribute\n[ RUN      ] TestBIOSEnumAttribute.CtorTest\n[       OK ] TestBIOSEnumAttribute.CtorTest (1 ms)\n[ RUN      ] TestBIOSEnumAttribute.ConstructEntry\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:120:\n    Function call: findHandle(@0x5627ed6d0380 \"Concurrent\")\n          Returns: 2\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:122:\n    Function call: findHandle(@0x5627ed6d03a0 \"Disruptive\")\n          Returns: 3\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:124:\n    Function call: findHandle(@0x7ffcd04960f8 \"CodeUpdatePolicy\")\n          Returns: 4\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:120:\n    Function call: findHandle(@0x5627ed6d03d0 \"Concurrent\")\n          Returns: 2\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:122:\n    Function call: findHandle(@0x5627ed6d03f0 \"Disruptive\")\n          Returns: 3\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:124:\n    Function call: findHandle(@0x7ffcd0496268 \"CodeUpdatePolicy\")\n          Returns: 4\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:120:\n    Function call: findHandle(@0x5627ed6d03d0 \"Concurrent\")\n          Returns: 2\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:122:\n    Function call: findHandle(@0x5627ed6d03f0 \"Disruptive\")\n          Returns: 3\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:124:\n    Function call: findHandle(@0x7ffcd0496268 \"CodeUpdatePolicy\")\n          Returns: 4\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSEnumAttribute.ConstructEntry (1 ms)\n[ RUN      ] TestBIOSEnumAttribute.setAttrValueOnDbus\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_enum_attribute_test.cpp:214:\n    Function call: findString(2)\n          Returns: \"Concurrent\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSEnumAttribute.setAttrValueOnDbus (0 ms)\n[----------] 3 tests from TestBIOSEnumAttribute (4 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (4 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.219609, "duration": 0.08456039428710938, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "66"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_enum_attribute_test"]}
{"name": "libpldmresponder_bios_string_attribute_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from TestBIOSStringAttribute\n[ RUN      ] TestBIOSStringAttribute.CtorTest\n[       OK ] TestBIOSStringAttribute.CtorTest (1 ms)\n[ RUN      ] TestBIOSStringAttribute.ConstructEntry\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_string_attribute_test.cpp:125:\n    Function call: findHandle(@0x7ffd06934c98 \"str_example1\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_string_attribute_test.cpp:125:\n    Function call: findHandle(@0x7ffd06934dc8 \"str_example1\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - taking default action specified at:\n../libpldmresponder/test/libpldmresponder_bios_string_attribute_test.cpp:125:\n    Function call: findHandle(@0x7ffd06934dc8 \"str_example1\")\n          Returns: 5\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSStringAttribute.ConstructEntry (1 ms)\n[ RUN      ] TestBIOSStringAttribute.setAttrValueOnDbus\n[       OK ] TestBIOSStringAttribute.setAttrValueOnDbus (0 ms)\n[----------] 3 tests from TestBIOSStringAttribute (3 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (3 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.237092, "duration": 0.06776690483093262, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "111"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_string_attribute_test"], "stderr": "Get String Attribute Value Error: AttributeName = str_example1\n"}
{"name": "libpldmresponder_bios_table_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 2 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 2 tests from TestBIOSTable\n[ RUN      ] TestBIOSTable.testStoreLoad\n[       OK ] TestBIOSTable.testStoreLoad (1 ms)\n[ RUN      ] TestBIOSTable.testLoadOntoExisting\n[       OK ] TestBIOSTable.testLoadOntoExisting (0 ms)\n[----------] 2 tests from TestBIOSTable (2 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 1 test suite ran. (2 ms total)\n[  PASSED  ] 2 tests.\n", "result": "OK", "starttime": 1636193743.2479954, "duration": 0.0801703929901123, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "230"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_table_test"]}
{"name": "libpldmresponder_bios_config_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 2 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 2 tests from TestBIOSConfig\n[ RUN      ] TestBIOSConfig.buildTablesTest\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getService(0x7f3311e489e8 pointing to \"/xyz/openbmc_project/bios_config/manager\", 0x7f3311e48a18 pointing to \"xyz.openbmc_project.BIOSConfig.Manager\")\n          Returns: \"\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\nsetBIOSTable:: updateBaseBIOSTableProperty() \n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getService(0x7f3311e489e8 pointing to \"/xyz/openbmc_project/bios_config/manager\", 0x7f3311e48a18 pointing to \"xyz.openbmc_project.BIOSConfig.Manager\")\n          Returns: \"\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSConfig.buildTablesTest (27 ms)\n[ RUN      ] TestBIOSConfig.setAttrValue\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getService(0x7f3311e489e8 pointing to \"/xyz/openbmc_project/bios_config/manager\", 0x7f3311e48a18 pointing to \"xyz.openbmc_project.BIOSConfig.Manager\")\n          Returns: \"\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c9580e380 pointing to \"/xyz/abc/def\", 0x559c9580e3c0 pointing to \"Str_example1\", 0x559c9580ac70 pointing to \"xyz.openbmc_project.str_example1.value\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c95800d30 pointing to \"/xyz/abc/def\", 0x559c95800d70 pointing to \"Str_example2\", 0x559c95812da0 pointing to \"xyz.openbmc_project.str_example2.value\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c95802c10 pointing to \"/xyz/openbmc_project/avsbus\", 0x559c9580cd50 pointing to \"Rail\", 0x559c95802c40 pointing to \"xyz.openbmc.AvsBus.Manager\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c958129c0 pointing to \"/xyz/abc/def\", 0x559c95812a00 pointing to \"State\", 0x559c9580f620 pointing to \"xyz.openbmc_project.HMCManaged.State\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c95811db0 pointing to \"/xyz/abc/def\", 0x559c95811df0 pointing to \"Side\", 0x559c9580f700 pointing to \"xyz.openbmc.FWBoot.Side\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getDbusPropertyVariant(0x559c958110d0 pointing to \"/xyz/abc/def\", 0x559c95811110 pointing to \"Policy\", 0x559c9580f5f0 pointing to \"xyz.openbmc.InBandCodeUpdate\")\n          Returns: ('bool(index = 0)' with value false)\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\nsetBIOSTable:: updateBaseBIOSTableProperty() \n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getService(0x7f3311e489e8 pointing to \"/xyz/openbmc_project/bios_config/manager\", 0x7f3311e48a18 pointing to \"xyz.openbmc_project.BIOSConfig.Manager\")\n          Returns: \"\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\nsetBIOSTable:: updateBaseBIOSTableProperty() \n\nGMOCK WARNING:\nUninteresting mock function call - returning default value.\n    Function call: getService(0x7f3311e489e8 pointing to \"/xyz/openbmc_project/bios_config/manager\", 0x7f3311e48a18 pointing to \"xyz.openbmc_project.BIOSConfig.Manager\")\n          Returns: \"\"\nNOTE: You can safely ignore the above warning unless this call should not happen.  Do not suppress it by blindly adding an EXPECT_CALL() if you don't mean to enforce the call.  See https://github.com/google/googletest/blob/master/docs/gmock_cook_book.md#knowing-when-to-expect for details.\n[       OK ] TestBIOSConfig.setAttrValue (22 ms)\n[----------] 2 tests from TestBIOSConfig (49 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 1 test suite ran. (61 ms total)\n[  PASSED  ] 2 tests.\n", "result": "OK", "starttime": 1636193743.2105885, "duration": 0.13203048706054688, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "90"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_bios_config_test"], "stderr": "Failed to read BaseBIOSTable property, ERROR=sd_bus_message_new_method_call: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\nGet String Attribute Value Error: AttributeName = str_example1\nGet String Attribute Value Error: AttributeName = str_example2\nGet Integer Attribute Value Error: AttributeName = VDD_AVSBUS_RAIL\nfailed to update BaseBIOSTable property, ERROR=sd_bus_message_new_method_call: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\nFailed to read BaseBIOSTable property, ERROR=sd_bus_message_new_method_call: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\nGet String Attribute Value Error: AttributeName = str_example1\nGet String Attribute Value Error: AttributeName = str_example2\nGet Integer Attribute Value Error: AttributeName = VDD_AVSBUS_RAIL\nfailed to update BaseBIOSTable property, ERROR=sd_bus_message_new_method_call: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\nfailed to update BaseBIOSTable property, ERROR=sd_bus_message_new_method_call: org.freedesktop.DBus.Error.InvalidArgs: Invalid argument\n"}
{"name": "libpldmresponder_fru_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 1 test from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 1 test from FruParser\n[ RUN      ] FruParser.allScenarios\n[       OK ] FruParser.allScenarios (7 ms)\n[----------] 1 test from FruParser (7 ms total)\n\n[----------] Global test environment tear-down\n[==========] 1 test from 1 test suite ran. (7 ms total)\n[  PASSED  ] 1 test.\n", "result": "OK", "starttime": 1636193743.2709756, "duration": 0.07368135452270508, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "33"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_fru_test"]}
{"name": "pldm_utils_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 23 tests from 5 test suites.\n[----------] Global test environment set-up.\n[----------] 2 tests from decodeDate\n[ RUN      ] decodeDate.testGooduintToDate\n[       OK ] decodeDate.testGooduintToDate (0 ms)\n[ RUN      ] decodeDate.testBaduintToDate\n[       OK ] decodeDate.testBaduintToDate (0 ms)\n[----------] 2 tests from decodeDate (0 ms total)\n\n[----------] 2 tests from parseEffecterData\n[ RUN      ] parseEffecterData.testGoodDecodeEffecterData\n[       OK ] parseEffecterData.testGoodDecodeEffecterData (0 ms)\n[ RUN      ] parseEffecterData.testBadDecodeEffecterData\n[       OK ] parseEffecterData.testBadDecodeEffecterData (0 ms)\n[----------] 2 tests from parseEffecterData (0 ms total)\n\n[----------] 9 tests from FindStateEffecterPDR\n[ RUN      ] FindStateEffecterPDR.testOneMatch\n[       OK ] FindStateEffecterPDR.testOneMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testNoMatch\n[       OK ] FindStateEffecterPDR.testNoMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testEmptyRepo\n[       OK ] FindStateEffecterPDR.testEmptyRepo (0 ms)\n[ RUN      ] FindStateEffecterPDR.testMoreMatch\n[       OK ] FindStateEffecterPDR.testMoreMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testManyNoMatch\n[       OK ] FindStateEffecterPDR.testManyNoMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testOneMatchOneNoMatch\n[       OK ] FindStateEffecterPDR.testOneMatchOneNoMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testOneMatchManyNoMatch\n[       OK ] FindStateEffecterPDR.testOneMatchManyNoMatch (0 ms)\n[ RUN      ] FindStateEffecterPDR.testCompositeEffecter\n[       OK ] FindStateEffecterPDR.testCompositeEffecter (0 ms)\n[ RUN      ] FindStateEffecterPDR.testNoMatchCompositeEffecter\n[       OK ] FindStateEffecterPDR.testNoMatchCompositeEffecter (0 ms)\n[----------] 9 tests from FindStateEffecterPDR (0 ms total)\n\n[----------] 9 tests from FindStateSensorPDR\n[ RUN      ] FindStateSensorPDR.testOneMatch\n[       OK ] FindStateSensorPDR.testOneMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testNoMatch\n[       OK ] FindStateSensorPDR.testNoMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testEmptyRepo\n[       OK ] FindStateSensorPDR.testEmptyRepo (0 ms)\n[ RUN      ] FindStateSensorPDR.testMoreMatch\n[       OK ] FindStateSensorPDR.testMoreMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testManyNoMatch\n[       OK ] FindStateSensorPDR.testManyNoMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testOneMatchOneNoMatch\n[       OK ] FindStateSensorPDR.testOneMatchOneNoMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testOneMatchManyNoMatch\n[       OK ] FindStateSensorPDR.testOneMatchManyNoMatch (0 ms)\n[ RUN      ] FindStateSensorPDR.testCompositeSensor\n[       OK ] FindStateSensorPDR.testCompositeSensor (0 ms)\n[ RUN      ] FindStateSensorPDR.testNoMatchCompositeSensor\n[       OK ] FindStateSensorPDR.testNoMatchCompositeSensor (0 ms)\n[----------] 9 tests from FindStateSensorPDR (0 ms total)\n\n[----------] 1 test from toString\n[ RUN      ] toString.allTestCases\n[       OK ] toString.allTestCases (0 ms)\n[----------] 1 test from toString (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 23 tests from 5 test suites ran. (0 ms total)\n[  PASSED  ] 23 tests.\n", "result": "OK", "starttime": 1636193743.312312, "duration": 0.05053544044494629, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "250"}, "command": ["/home/manojeda/ci_test_area/pldm/build/common/test/pldm_utils_test"]}
{"name": "inventory_manager_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 4 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 4 tests from InventoryManagerTest\n[ RUN      ] InventoryManagerTest.handleQueryDeviceIdentifiersResponse\n[       OK ] InventoryManagerTest.handleQueryDeviceIdentifiersResponse (1 ms)\n[ RUN      ] InventoryManagerTest.handleQueryDeviceIdentifiersResponseErrorCC\n[       OK ] InventoryManagerTest.handleQueryDeviceIdentifiersResponseErrorCC (0 ms)\n[ RUN      ] InventoryManagerTest.getFirmwareParametersResponse\n[       OK ] InventoryManagerTest.getFirmwareParametersResponse (0 ms)\n[ RUN      ] InventoryManagerTest.getFirmwareParametersResponseErrorCC\n[       OK ] InventoryManagerTest.getFirmwareParametersResponseErrorCC (0 ms)\n[----------] 4 tests from InventoryManagerTest (1 ms total)\n\n[----------] Global test environment tear-down\n[==========] 4 tests from 1 test suite ran. (1 ms total)\n[  PASSED  ] 4 tests.\n", "result": "OK", "starttime": 1636193743.320139, "duration": 0.054120779037475586, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "138"}, "command": ["/home/manojeda/ci_test_area/pldm/build/fw-update/test/inventory_manager_test"], "stderr": "Failed to send PLDM message. RC = -7, errno = 9\nFailure to send the PLDM request message\nFailed to send GetFirmwareParameters request, EID=1, RC=1\n Failed to send PLDM message. RC = -7, errno = 9\nFailure to send the PLDM request message\nFailed to send GetFirmwareParameters request, EID=2, RC=1\n QueryDeviceIdentifiers response failed with error completion code, EID=1, CC=1\nGetFirmwareParameters response failed with error completion code, EID=1, CC=1\n"}
{"name": "libpldmresponder_pdr_effecter_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 4 tests from 4 test suites.\n[----------] Global test environment set-up.\n[----------] 1 test from GeneratePDRByStateEffecter\n[ RUN      ] GeneratePDRByStateEffecter.testGoodJson\n[       OK ] GeneratePDRByStateEffecter.testGoodJson (5 ms)\n[----------] 1 test from GeneratePDRByStateEffecter (5 ms total)\n\n[----------] 1 test from GeneratePDRByNumericEffecter\n[ RUN      ] GeneratePDRByNumericEffecter.testGoodJson\n[       OK ] GeneratePDRByNumericEffecter.testGoodJson (3 ms)\n[----------] 1 test from GeneratePDRByNumericEffecter (3 ms total)\n\n[----------] 1 test from GeneratePDR\n[ RUN      ] GeneratePDR.testMalformedJson\n[       OK ] GeneratePDR.testMalformedJson (5 ms)\n[----------] 1 test from GeneratePDR (5 ms total)\n\n[----------] 1 test from findStateEffecterId\n[ RUN      ] findStateEffecterId.goodJson\n[       OK ] findStateEffecterId.goodJson (3 ms)\n[----------] 1 test from findStateEffecterId (3 ms total)\n\n[----------] Global test environment tear-down\n[==========] 4 tests from 4 test suites ran. (18 ms total)\n[  PASSED  ] 4 tests.\n", "result": "OK", "starttime": 1636193743.2887228, "duration": 0.09594130516052246, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "102"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_pdr_effecter_test"]}
{"name": "libpldmresponder_pdr_sensor_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 2 tests from 2 test suites.\n[----------] Global test environment set-up.\n[----------] 1 test from GeneratePDRByStateSensor\n[ RUN      ] GeneratePDRByStateSensor.testGoodJson\n[       OK ] GeneratePDRByStateSensor.testGoodJson (5 ms)\n[----------] 1 test from GeneratePDRByStateSensor (5 ms total)\n\n[----------] 1 test from GeneratePDR\n[ RUN      ] GeneratePDR.testMalformedJson\n[       OK ] GeneratePDR.testMalformedJson (1 ms)\n[----------] 1 test from GeneratePDR (1 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 2 test suites ran. (6 ms total)\n[  PASSED  ] 2 tests.\n", "result": "OK", "starttime": 1636193743.305835, "duration": 0.08013010025024414, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "255"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_pdr_sensor_test"]}
{"name": "package_parser_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 5 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 5 tests from PackageParser\n[ RUN      ] PackageParser.ValidPkgSingleDescriptorSingleComponent\n[       OK ] PackageParser.ValidPkgSingleDescriptorSingleComponent (0 ms)\n[ RUN      ] PackageParser.ValidPkgMultipleDescriptorsMultipleComponents\n[       OK ] PackageParser.ValidPkgMultipleDescriptorsMultipleComponents (0 ms)\n[ RUN      ] PackageParser.InvalidPkgHeaderInfoIncomplete\n[       OK ] PackageParser.InvalidPkgHeaderInfoIncomplete (0 ms)\n[ RUN      ] PackageParser.InvalidPkgNotSupportedHeaderFormat\n[       OK ] PackageParser.InvalidPkgNotSupportedHeaderFormat (0 ms)\n[ RUN      ] PackageParser.InvalidPkgBadChecksum\n[       OK ] PackageParser.InvalidPkgBadChecksum (0 ms)\n[----------] 5 tests from PackageParser (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 5 tests from 1 test suite ran. (0 ms total)\n[  PASSED  ] 5 tests.\n", "result": "OK", "starttime": 1636193743.3302126, "duration": 0.07115769386291504, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "8"}, "command": ["/home/manojeda/ci_test_area/pldm/build/fw-update/test/package_parser_test"], "stderr": "Decoding PLDM package header information failed, RC=3\nParsing package header failed, CALC_CHECKSUM=1454282319, PKG_HDR_CHECKSUM=1471059535\n"}
{"name": "device_updater_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 2 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 2 tests from DeviceUpdaterTest\n[ RUN      ] DeviceUpdaterTest.validatePackage\n[       OK ] DeviceUpdaterTest.validatePackage (0 ms)\n[ RUN      ] DeviceUpdaterTest.ReadPackage512B\n[       OK ] DeviceUpdaterTest.ReadPackage512B (0 ms)\n[----------] 2 tests from DeviceUpdaterTest (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 1 test suite ran. (0 ms total)\n[  PASSED  ] 2 tests.\n", "result": "OK", "starttime": 1636193743.3468106, "duration": 0.059504032135009766, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "45"}, "command": ["/home/manojeda/ci_test_area/pldm/build/fw-update/test/device_updater_test"], "stderr": "offset = 0, length = 512\n"}
{"name": "dbus_to_host_effecter_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from HostEffecterParser\n[ RUN      ] HostEffecterParser.parseEffecterJsonGoodPath\n[       OK ] HostEffecterParser.parseEffecterJsonGoodPath (2 ms)\n[ RUN      ] HostEffecterParser.parseEffecterJsonBadPath\n[       OK ] HostEffecterParser.parseEffecterJsonBadPath (0 ms)\n[ RUN      ] HostEffecterParser.findNewStateValue\n[       OK ] HostEffecterParser.findNewStateValue (1 ms)\n[----------] 3 tests from HostEffecterParser (3 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (3 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.353578, "duration": 0.0548558235168457, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "145"}, "command": ["/home/manojeda/ci_test_area/pldm/build/host-bmc/test/dbus_to_host_effecter_test"], "stderr": "json does not exist, PATH=\"./host_effecter_jsons/no_json/dbus_to_host_effecter.json\"\nThe json file does not exist or malformed, ERROR=xyz.openbmc_project.Common.Error.InternalFailure: The operation failed internally.\njson does not exist, PATH=\"./host_effecter_jsons/no_json/dbus_to_host_effecter.json\"\nParsing json file failed, FILE=\"./host_effecter_jsons/malformed/dbus_to_host_effecter.json\"\n"}
{"name": "libpldmresponder_platform_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 14 tests from 7 test suites.\n[----------] Global test environment set-up.\n[----------] 5 tests from getPDR\n[ RUN      ] getPDR.testGoodPath\n[       OK ] getPDR.testGoodPath (8 ms)\n[ RUN      ] getPDR.testShortRead\n[       OK ] getPDR.testShortRead (4 ms)\n[ RUN      ] getPDR.testBadRecordHandle\n[       OK ] getPDR.testBadRecordHandle (4 ms)\n[ RUN      ] getPDR.testNoNextRecord\n[       OK ] getPDR.testNoNextRecord (8 ms)\n[ RUN      ] getPDR.testFindPDR\n[       OK ] getPDR.testFindPDR (6 ms)\n[----------] 5 tests from getPDR (32 ms total)\n\n[----------] 2 tests from setStateEffecterStatesHandler\n[ RUN      ] setStateEffecterStatesHandler.testGoodRequest\n[       OK ] setStateEffecterStatesHandler.testGoodRequest (4 ms)\n[ RUN      ] setStateEffecterStatesHandler.testBadRequest\n[       OK ] setStateEffecterStatesHandler.testBadRequest (6 ms)\n[----------] 2 tests from setStateEffecterStatesHandler (11 ms total)\n\n[----------] 2 tests from setNumericEffecterValueHandler\n[ RUN      ] setNumericEffecterValueHandler.testGoodRequest\n[       OK ] setNumericEffecterValueHandler.testGoodRequest (3 ms)\n[ RUN      ] setNumericEffecterValueHandler.testBadRequest\n[       OK ] setNumericEffecterValueHandler.testBadRequest (4 ms)\n[----------] 2 tests from setNumericEffecterValueHandler (8 ms total)\n\n[----------] 1 test from parseStateSensor\n[ RUN      ] parseStateSensor.allScenarios\n[       OK ] parseStateSensor.allScenarios (0 ms)\n[----------] 1 test from parseStateSensor (0 ms total)\n\n[----------] 1 test from StateSensorHandler\n[ RUN      ] StateSensorHandler.allScenarios\n[       OK ] StateSensorHandler.allScenarios (2 ms)\n[----------] 1 test from StateSensorHandler (2 ms total)\n\n[----------] 1 test from TerminusLocatorPDR\n[ RUN      ] TerminusLocatorPDR.BMCTerminusLocatorPDR\n[       OK ] TerminusLocatorPDR.BMCTerminusLocatorPDR (0 ms)\n[----------] 1 test from TerminusLocatorPDR (0 ms total)\n\n[----------] 2 tests from getStateSensorReadingsHandler\n[ RUN      ] getStateSensorReadingsHandler.testGoodRequest\n[       OK ] getStateSensorReadingsHandler.testGoodRequest (1 ms)\n[ RUN      ] getStateSensorReadingsHandler.testBadRequest\n[       OK ] getStateSensorReadingsHandler.testBadRequest (2 ms)\n[----------] 2 tests from getStateSensorReadingsHandler (4 ms total)\n\n[----------] Global test environment tear-down\n[==========] 14 tests from 7 test suites ran. (59 ms total)\n[  PASSED  ] 14 tests.\n", "result": "OK", "starttime": 1636193743.2820501, "duration": 0.1273953914642334, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "179"}, "command": ["/home/manojeda/ci_test_area/pldm/build/libpldmresponder/test/libpldmresponder_platform_test"], "stderr": "PDR next record handle 2\nPDR type \u0001\nPDR next record handle 3\nPDR type \u000b\nPDR entity type 33\nPDR next record handle 4\nPDR type \u000b\nPDR entity type 100\nInvalid state set value, EFFECTER_ID=1 VALUE=\u0003 COMPOSITE_EFFECTER_ID=\u0000 DBUS_PATH=/foo/bar\nThe requester sent wrong composite effecter count for the effecter, EFFECTER_ID=1COMP_EFF_CNT=\u0003\neffecter data size is incorrect.\nThe requester sent wrong sensorRearm count for the sensor, SENSOR_ID=1SENSOR_REARM_COUNT=\u0003\n"}
{"name": "pldmd_instanceid_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from InstanceId\n[ RUN      ] InstanceId.testNext\n[       OK ] InstanceId.testNext (0 ms)\n[ RUN      ] InstanceId.testAllUsed\n[       OK ] InstanceId.testAllUsed (0 ms)\n[ RUN      ] InstanceId.testMarkfree\n[       OK ] InstanceId.testMarkfree (0 ms)\n[----------] 3 tests from InstanceId (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (0 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.3877985, "duration": 0.02348780632019043, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "130"}, "command": ["/home/manojeda/ci_test_area/pldm/build/test/pldmd_instanceid_test"]}
{"name": "pldmd_registration_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 2 test suites.\n[----------] Global test environment set-up.\n[----------] 1 test from CcOnlyResponse\n[ RUN      ] CcOnlyResponse.testEncode\n[       OK ] CcOnlyResponse.testEncode (0 ms)\n[----------] 1 test from CcOnlyResponse (0 ms total)\n\n[----------] 2 tests from Registration\n[ RUN      ] Registration.testSuccess\n[       OK ] Registration.testSuccess (0 ms)\n[ RUN      ] Registration.testFailure\n[       OK ] Registration.testFailure (0 ms)\n[----------] 2 tests from Registration (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 2 test suites ran. (0 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.3946161, "duration": 0.017493009567260742, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "101"}, "command": ["/home/manojeda/ci_test_area/pldm/build/test/pldmd_registration_test"]}
{"name": "request_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 4 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 4 tests from RequestIntfTest\n[ RUN      ] RequestIntfTest.0Retries100msTimeout\n[       OK ] RequestIntfTest.0Retries100msTimeout (0 ms)\n[ RUN      ] RequestIntfTest.2Retries100msTimeout\n[       OK ] RequestIntfTest.2Retries100msTimeout (1146 ms)\n[ RUN      ] RequestIntfTest.9Retries100msTimeoutRequestStoppedAfter1sec\n[       OK ] RequestIntfTest.9Retries100msTimeoutRequestStoppedAfter1sec (1749 ms)\n[ RUN      ] RequestIntfTest.2Retries100msTimeoutsendReturnsError\n[       OK ] RequestIntfTest.2Retries100msTimeoutsendReturnsError (0 ms)\n[----------] 4 tests from RequestIntfTest (2897 ms total)\n\n[----------] Global test environment tear-down\n[==========] 4 tests from 1 test suite ran. (2897 ms total)\n[  PASSED  ] 4 tests.\n", "result": "OK", "starttime": 1636193743.3766649, "duration": 2.9174246788024902, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "144"}, "command": ["/home/manojeda/ci_test_area/pldm/build/requester/test/request_test"]}
{"name": "handler_test", "stdout": "Running main() from ../googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 3 tests from HandlerTest\n[ RUN      ] HandlerTest.singleRequestResponseScenario\n[       OK ] HandlerTest.singleRequestResponseScenario (1 ms)\n[ RUN      ] HandlerTest.singleRequestInstanceIdTimerExpired\n[       OK ] HandlerTest.singleRequestInstanceIdTimerExpired (1656 ms)\n[ RUN      ] HandlerTest.multipleRequestResponseScenario\n[       OK ] HandlerTest.multipleRequestResponseScenario (1249 ms)\n[----------] 3 tests from HandlerTest (2908 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test suite ran. (2908 ms total)\n[  PASSED  ] 3 tests.\n", "result": "OK", "starttime": 1636193743.364747, "duration": 2.9307100772857666, "returncode": 0, "env": {"PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "HOSTNAME": "docker-desktop", "TERM": "xterm", "MAKEFLAGS": "", "DEBIAN_FRONTEND": "noninteractive", "PYTHONPATH": "/usr/local/lib/python3.8/site-packages/", "HOME": "/home/manojeda", "LC_CTYPE": "C.UTF-8", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/tmp/tmp2f90l2bs/system_bus_socket,guid=f8d5bdda0399436a03979bce61865134", "DBUS_STARTER_BUS_TYPE": "session", "MALLOC_PERTURB_": "242"}, "command": ["/home/manojeda/ci_test_area/pldm/build/requester/test/handler_test"], "stderr": "Response not received for the request, instance ID expired. EID = 0 INSTANCE_ID = 0 TYPE = 0 COMMAND = 0\n"}
